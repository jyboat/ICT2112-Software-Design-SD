@{
    var medicalRecords = ViewData["PersonalMedicalRecords"] as List<dynamic>;

    @* 
@if (medicalRecords == null)
{
    <p style="color: red;">ViewData["PersonalMedicalRecords"] is NULL!</p>
}
else
{
    <p style="color: green;">ViewData contains @medicalRecords.Count records.</p>
}
*@

}


<h2 class="mb-4 text-primary">My Medical Records</h2>

<!--<div class="mb-3 d-flex justify-content-between">
    <input type="text" id="searchInput" class="form-control w-50" placeholder="Search medical records..."
        onkeyup="searchTable()">
</div>-->

@if (medicalRecords != null && medicalRecords.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th onclick="sortTable(0)" style="cursor: pointer;">Date</th>
                    <th onclick="sortTable(1)" style="cursor: pointer;">Doctor's Note</th>
                    <th>Attachment Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="recordsTable">
                @foreach (var record in medicalRecords)
                {
                    <tr>
                        <td>@record.Date</td>
                        <td>@record.DoctorNote</td>
                        <td>@record.AttachmentName</td>
                        <td>
                            <button class="btn btn-outline-primary btn-sm"
                                onclick="showAttachment('@record.AttachmentData', '@record.AttachmentType')">
                                View Attachment
                            </button>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <!-- Pagination Controls -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <button id="prevPage" class="btn btn-secondary" onclick="prevPage()">Previous</button>
        <span id="pageIndicator" class="mx-3"></span>
        <button id="nextPage" class="btn btn-secondary" onclick="nextPage()">Next</button>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Date</th>
                    <th>Doctor's Note</th>
                    <th>Attachment Name</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="3" class="text-center text-muted">No medical records found.</td>
                </tr>
            </tbody>
        </table>
    </div>
}

<!-- Modal for Viewing Attachments -->
<div class="modal fade" id="attachmentModal" tabindex="-1" aria-labelledby="attachmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="attachmentModalLabel">Attachment Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center" id="attachmentContent">
                <!-- Attachment will be inserted dynamically -->
            </div>
        </div>
    </div>
</div>


@section Scripts {
<script>
    function showAttachment(attachmentData, attachmentType) {
        let modalBody = document.getElementById("attachmentContent");
        modalBody.innerHTML = ""; // Clear previous content

        if (attachmentData && attachmentData !== "null" && attachmentType) {
            if (attachmentType.startsWith("image/")) {
                // **Display Image**
                modalBody.innerHTML = `<img src="data:${attachmentType};base64,${attachmentData}" alt="Attachment" class="img-fluid">`;
            } else if (attachmentType === "application/pdf") {
                // **Display PDF in Viewer**
                modalBody.innerHTML = `<iframe src="data:${attachmentType};base64,${attachmentData}" width="100%" height="500px"></iframe>`;
            } else {
                // **Unsupported File Type**
                modalBody.innerHTML = `<p class="text-warning">Unsupported file type: ${attachmentType}</p>`;
            }
        } else {
            // **No Attachment Found**
            modalBody.innerHTML = `<p class="text-muted">No attachment available.</p>`;
        }

        var modal = new bootstrap.Modal(document.getElementById('attachmentModal'));
        modal.show();
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = 1;
        const rowsPerPage = 10;
        const table = document.getElementById("recordsTable");
        const rows = Array.from(table.getElementsByTagName("tr"));
        const pageIndicator = document.getElementById("pageIndicator");
        const prevButton = document.getElementById("prevPage");
        const nextButton = document.getElementById("nextPage");

        function showPage(page) {
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            if (totalPages === 0) {
                pageIndicator.textContent = "No records available";
                prevButton.style.display = "none";
                nextButton.style.display = "none";
                return;
            }

            // Hide all rows first.
            rows.forEach(row => row.style.display = "none");

            // Calculate which rows to show.
            const startIndex = (page - 1) * rowsPerPage;
            const endIndex = startIndex + rowsPerPage;
            rows.slice(startIndex, endIndex).forEach(row => row.style.display = "");

            // Update the page indicator.
            pageIndicator.textContent = `Page ${page} of ${totalPages}`;

            // Enable/disable buttons based on the current page.
            prevButton.disabled = (page === 1);
            nextButton.disabled = (page === totalPages);
        }

        // Define functions for next and previous actions.
        window.nextPage = function () {
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                showPage(currentPage);
            }
        };

        window.prevPage = function () {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        };

        // Initial display of page 1.
        showPage(currentPage);
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        setTimeout(function () {
            let alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                let bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 3000); // Auto-dismiss after 3 seconds
    });
</script>
}
