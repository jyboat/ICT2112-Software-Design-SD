@model List<ClearCare.Models.Entities.NurseAvailability>

@{
    ViewData["Title"] = "Nurse Availability Calendar";
}

<!DOCTYPE html>
<html>
<head>
    <title>Nurse Availability Calendar</title>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar/index.global.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        #calendar {
            max-width: 900px;
            margin: 40px auto;
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                selectable: true, // Allows clicking empty dates

                events: [
                    @foreach (var availability in Model)
                    {
                        var details = availability.GetAvailabilityDetails();
                        <text>
                        {
                            id: "@Html.Raw(details["availabilityId"])",
                            title: "Available: @Html.Raw(details["nurseID"])",
                            start: "@Html.Raw(details["date"])",
                            extendedProps: {
                                nurseId: "@Html.Raw(details["nurseID"])",
                                startTime: "@Html.Raw(details["startTime"])",
                                endTime: "@Html.Raw(details["endTime"])"
                            }
                        },
                        </text>
                    }
                ],

                eventClick: function(info) {
                    openEditModal(info.event.id, info.event.extendedProps.nurseId, info.event.startStr);
                },

                dateClick: function(info) {
                    openAddModal(info.dateStr);
                }
            });
            calendar.render();
        });

        function openEditModal(id, nurseId, date) {
            document.getElementById("editAvailabilityId").value = id;
            document.getElementById("editNurseID").value = nurseId;
            document.getElementById("editDate").value = date;
            $('#editAvailabilityModal').modal('show');
        }

        function openAddModal(date) {
            document.getElementById("addDate").value = date;
            $('#addAvailabilityModal').modal('show');
        }

        function closeModal() {
            $('.modal').modal('hide');
        }

        function updateAvailability() {
            let id = document.getElementById("editAvailabilityId").value;
            let nurseID = document.getElementById("editNurseID").value;
            let date = document.getElementById("editDate").value;
            let startTime = "08:00:00";
            let endTime = "16:00:00";

            fetch("/NurseAvailability/Update", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: new URLSearchParams({ 
                    availabilityId: id, nurseID: nurseID, date: date, startTime: startTime, endTime: endTime
                })
            }).then(response => {
                if (response.ok) {
                    alert("Availability updated successfully!");
                    closeModal();
                    location.reload();
                } else {
                    alert("Error updating availability.");
                }
            }).catch(error => console.error("Error:", error));
        }

        function deleteAvailability(id) {
            if (confirm("Are you sure you want to delete this availability?")) {
                fetch("/NurseAvailability/Delete/" + id, {
                    method: "POST"
                }).then(response => {
                    if (response.ok) {
                        alert("Availability deleted successfully!");
                        location.reload();
                    } else {
                        alert("Error deleting availability.");
                    }
                }).catch(error => console.error("Error:", error));
            }
        }

        function addAvailability() {
            let nurseID = document.getElementById("addNurseID").value;
            let date = document.getElementById("addDate").value;
            let startTime = "08:00:00";
            let endTime = "16:00:00";

            fetch("/NurseAvailability/AddAvailability", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: new URLSearchParams({ 
                    nurseID: nurseID, date: date, startTime: startTime, endTime: endTime
                })
            }).then(response => {
                if (response.ok) {
                    alert("Availability added successfully!");
                    closeModal();
                    location.reload();
                } else {
                    alert("Error adding availability.");
                }
            }).catch(error => console.error("Error:", error));
        }
    </script>
</head>
<body>
    <h2 style="text-align: center;">Nurse Availability Calendar</h2>

    <div id="calendar"></div>

    <!-- Edit Modal -->
    <div id="editAvailabilityModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Availability</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editAvailabilityForm">
                        <input type="hidden" id="editAvailabilityId">
                        <input type="hidden" id="editStartTime" value="08:00:00">
                        <input type="hidden" id="editEndTime" value="16:00:00">

                        <div class="form-group">
                            <label for="editNurseID">Nurse ID</label>
                            <input type="text" class="form-control" id="editNurseID" readonly>
                        </div>
                        <div class="form-group">
                            <label for="editDate">Date</label>
                            <input type="date" class="form-control" id="editDate">
                        </div>

                        <button type="button" class="btn btn-primary" onclick="updateAvailability()">Save Changes</button>
                        <button type="button" class="btn btn-danger" onclick="deleteAvailability(document.getElementById('editAvailabilityId').value)">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Modal -->
    <div id="addAvailabilityModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Availability</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addAvailabilityForm">
                        <input type="hidden" id="addStartTime" value="08:00:00">
                        <input type="hidden" id="addEndTime" value="16:00:00">

                        <div class="form-group">
                            <label for="addNurseID">Nurse ID</label>
                            <input type="text" class="form-control" id="addNurseID" value="USR003" readonly>
                        </div>
                        <div class="form-group">
                            <label for="addDate">Date</label>
                            <input type="date" class="form-control" id="addDate">
                        </div>

                        <button type="button" class="btn btn-primary" onclick="addAvailability()">Add Availability</button>
                        <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
