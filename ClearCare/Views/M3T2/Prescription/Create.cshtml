@model ClearCare.Models.Entities.M3T2.PrescriptionModel
@using ClearCare
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Create Prescription";

    // Retrieve the current user's UUID from session.
    string currentUserUUID = Context.Session.GetString("UserID") ?? "";

    // Set the DoctorId on the model using the session value.
    Model.DoctorId = currentUserUUID;

    // Retrieve the patient list from IUserList instead of HardcodedUUIDs.
    var patientList = IUserList.Patients;
}

<h2>Create Prescription</h2>

<form asp-action="Create" method="post">
    <div>
        <label>Patient:</label>
        <select asp-for="PatientId" class="form-control">
            @foreach (var patient in patientList)
            {
                <option value="@patient.Uuid">@patient.Name</option>
            }
        </select>
    </div>

    <div class="container py-2">
        <!-- Hidden field for DoctorId is now populated from session -->
        <input type="hidden" asp-for="DoctorId" value="@currentUserUUID" />
    </div>

    <div>
        <h4>Medications</h4>
        <div id="medications-container">
            @for (int i = 0; i < Model.Medications.Count; i++)
            {
                <div class="medication-row row mb-3 d-flex">
                    <div class="col-md-4">
                        <label class="mb-0">Drug Name:</label>
                        <input class="form-control w-100" name="Medications[@i].DrugName" required />
                    </div>
                    <div class="col-md-4">
                        <label class="mb-0">Dosage:</label>
                        <input class="form-control w-100" name="Medications[@i].Dosage" required />
                    </div>
                    <div class="col-md-2 d-flex flex-column justify-content-end">
                        <button class="btn btn-danger" type="button" onclick="removeRow(this)">Remove</button>
                    </div>
                </div>
            }
        </div>

        <div id="medication-template" style="display:none;">
            <div class="medication-row row mb-3 d-flex">
                <div class="col-md-4">
                    <label class="mb-0">Drug Name:</label>
                    <input class="form-control w-100 template-drugname" />
                </div>
                <div class="col-md-4">
                    <label class="mb-0">Dosage:</label>
                    <input class="form-control w-100 template-dosage" />
                </div>
                <div class="col-md-2 d-flex flex-column justify-content-end">
                    <button class="btn btn-danger" type="button" onclick="removeRow(this)">Remove</button>
                </div>
            </div>
        </div>
    </div>

    <br>

    <button class="btn btn-primary" type="button" onclick="addMedicationRow()">Add Drug</button>
    <button class="btn btn-success" type="submit">Save</button>
</form>

@section Scripts {
    <script>
        let counter = @Model.Medications.Count;
        function addMedicationRow() {
            const container = document.getElementById("medications-container");
            const templateHtml = document.getElementById("medication-template").innerHTML;

            const tempDiv = document.createElement("div");
            tempDiv.innerHTML = templateHtml.trim();

            const drugNameInput = tempDiv.querySelector(".template-drugname");
            const dosageInput = tempDiv.querySelector(".template-dosage");

            if (!drugNameInput || !dosageInput) {
                console.error("Error: Could not find drug name or dosage input in template");
                return;
            }

            drugNameInput.setAttribute("name", `Medications[${counter}].DrugName`);
            drugNameInput.setAttribute("required", true);

            dosageInput.setAttribute("name", `Medications[${counter}].Dosage`);
            dosageInput.setAttribute("required", true);

            counter++;
            container.appendChild(tempDiv.firstElementChild);
        }

        function removeRow(button) {
            const container = document.getElementById("medications-container");
            if (container.children.length > 1) {
                button.closest(".medication-row").remove();
            }
        }
    </script>
}
