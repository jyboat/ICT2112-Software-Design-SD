@{
    var medicalRecords = ViewData["PersonalMedicalRecords"] as List<dynamic>;
    var userRole = Context.Session.GetString("Role");
}


<h2 class="mb-4 text-primary">
    @(userRole == "Caregiver" ? "Assigned Patient Medical Records" : "My Medical Records")
</h2>

@if (medicalRecords != null && medicalRecords.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-striped table-hover w-100">
            <thead class="table-dark">
                <tr>
                    <th onclick="sortTable(0)" style="cursor: pointer;">Date</th>
                    <th onclick="sortTable(1)" style="cursor: pointer;">Brief Doctor's Note</th>
                    <th>Attachment Name</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody id="recordsTable">
                @foreach (var record in medicalRecords)
                {
                    <tr>
                        <td>@Convert.ToDateTime(record.Date).ToString("yyyy-MM-dd")</td>
                        <td style="max-width: 300px;">
                            <div class="text-truncate text-muted small d-block" style="max-width: 100%;"
                                data-bs-toggle="tooltip" title="@record.DoctorNote">
                                @record.DoctorNote
                            </div>
                        </td>


                        <td>@record.AttachmentName</td>
                        <td>
                            <button class="btn btn-warning btn-md me-2"
                                onclick="showAttachment(`@record.AttachmentData`, `@record.AttachmentType`, `@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(record.DoctorNote))`)">
                                <i class="bi bi-eye"></i><span class="d-none d-md-inline"> View</span>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <!-- Pagination Controls -->
    <div class="d-flex justify-content-center mt-3">
        <nav>
            <ul class="pagination" id="pagination"></ul>
        </nav>
    </div>

}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Date</th>
                    <th>Doctor's Note</th>
                    <th>Attachment Name</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="3" class="text-center text-muted">No medical records found.</td>
                </tr>
            </tbody>
        </table>
    </div>
}


<!-- Modal for Viewing Attachments -->
<div class="modal fade" id="attachmentModal" tabindex="-1" aria-labelledby="attachmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="attachmentModalLabel">
                    <i class="bi bi-file-earmark-medical me-2"></i>Medical Record Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-4">
                <div class="list-group list-group-flush">
                    <div class="list-group-item px-0">
                        <h6 class="fw-bold">Doctor's Note</h6>
                        <div id="doctorNoteContent" class="p-3 bg-light rounded border">
                            <!-- Full doctor note will be inserted here -->
                        </div>
                    </div>

                    <div class="list-group-item px-0 mt-3">
                        <h6 class="fw-bold">Attachment</h6>
                        <div id="attachmentContent" class="text-center">
                            <!-- Attachment will be inserted dynamically -->
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        function showAttachment(attachmentData, attachmentType, fullNote) {
            let modalBodyNote = document.getElementById("doctorNoteContent");
            let modalBodyAttachment = document.getElementById("attachmentContent");

            modalBodyNote.innerHTML = fullNote
                ? `<p class="text-start">${fullNote}</p>`
                : `<p class="text-muted">No doctor's note available.</p>`;

            modalBodyAttachment.innerHTML = ""; // Clear previous content

            if (attachmentData && attachmentData !== "null" && attachmentType) {
                if (attachmentType.startsWith("image/")) {
                    modalBodyAttachment.innerHTML = `<img src="data:${attachmentType};base64,${attachmentData}" alt="Attachment" class="img-fluid">`;
                } else if (attachmentType === "application/pdf") {
                    modalBodyAttachment.innerHTML = `<iframe src="data:${attachmentType};base64,${attachmentData}" width="100%" height="500px" ></iframe>`;
                } else {
                    modalBodyAttachment.innerHTML = `<p class="text-warning">Unsupported file type: ${attachmentType}</p>`;
                }
            } else {
                modalBodyAttachment.innerHTML = `<p class="text-muted">No attachment available.</p>`;
            }

            var modal = new bootstrap.Modal(document.getElementById('attachmentModal'));
            modal.show();
        }

    </script>

    
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tableBody = document.querySelector("#recordsTable");
            const pagination = document.querySelector("#pagination");

            if (!tableBody || !pagination) return;

            const rows = Array.from(tableBody.querySelectorAll("tr"));
            const rowsPerPage = 10;
            let currentPage = 1;

            function renderTable() {
                const totalPages = Math.ceil(rows.length / rowsPerPage);
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;

                rows.forEach(row => row.style.display = "none");
                rows.slice(start, end).forEach(row => row.style.display = "");

                renderPagination(totalPages);
            }

            function renderPagination(totalPages) {
                pagination.innerHTML = "";

                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement("li");
                    li.className = `page-item ${i === currentPage ? "active" : ""}`;

                    const a = document.createElement("a");
                    a.className = "page-link";
                    a.href = "#";
                    a.textContent = i;

                    a.addEventListener("click", function (e) {
                        e.preventDefault();
                        currentPage = i;
                        renderTable();
                    });

                    li.appendChild(a);
                    pagination.appendChild(li);
                }
            }

            // Initial display
            renderTable();
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(function () {
                let alerts = document.querySelectorAll('.alert');
                alerts.forEach(alert => {
                    let bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 3000); // Auto-dismiss after 3 seconds
        });
    </script>
}
