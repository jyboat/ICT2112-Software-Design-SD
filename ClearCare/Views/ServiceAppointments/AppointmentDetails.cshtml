@model Dictionary<string, object>

@{
    ViewData["Title"] = "Appointment Details";
}

<!DOCTYPE html>
<html>
<head>
    <title>Appointment Details</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

<div class="container">
    <h2>Appointment Details</h2>

    <div class="card">
        <div class="card-body">
            <p><strong>Appointment ID:</strong> <span id="appointmentIdDisplay">@Model["AppointmentId"]</span></p>
            <p><strong>Patient ID:</strong> <span id="patientIdDisplay">@Model["PatientId"]</span></p>
            <p><strong>Nurse ID:</strong> <span id="nurseIdDisplay">@Model["NurseId"]</span></p>
            <p><strong>Doctor ID:</strong> <span id="doctorIdDisplay">@Model["DoctorId"]</span></p>
            <p><strong>Service Type:</strong> <span id="serviceTypeIdDisplay">@Model["ServiceTypeId"]</span></p>
            <p><strong>Status:</strong> <span id="statusDisplay">@Model["Status"]</span></p>
            <p><strong>Date & Time:</strong> <span
                    id="dateTimeDisplay">@Convert.ToDateTime(Model["DateTime"]).ToString("yyyy-MM-dd HH:mm")</span></p>
            <p><strong>Slot:</strong> <span id="slotDisplay">@Model["Slot"]</span></p>
            <p><strong>Location:</strong> <span id="locationDisplay">@Model["Location"]</span></p>
        </div>
        <div class="card-footer d-flex justify-content-between">
            <button type="button" class="btn btn-primary" onclick="showEditModal()">Edit Appointment</button>
            <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete Appointment</button>
            <a href="/api/ServiceAppointments" class="btn btn-secondary">Back to List</a>
        </div>
    </div>

    <!-- edit modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Appointment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editAppointmentForm">
                        <input type="hidden" id="appointmentId" value="@Model["AppointmentId"]">
                        
                        @* patient id read only for now *@
                        <div class="mb-3">
                            <label for="patientId" class="form-label">Patient ID</label>
                            <input type="text" class="form-control" id="patientId" value="@Model["PatientId"]" readonly>
                        </div>

                        <div class="mb-3">
                            <label for="nurseId" class="form-label">Nurse ID</label>
                            <input type="text" class="form-control" id="nurseId" value="@Model["NurseId"]">
                        </div>

                        <div class="mb-3">
                            <label for="doctorId" class="form-label">Doctor ID</label>
                            <input type="text" class="form-control" id="doctorId" value="@Model["DoctorId"]">
                        </div>

                        <div class="mb-3">
                            <label for="serviceTypeId" class="form-label">Service Type</label>
                            <input type="text" class="form-control" id="serviceTypeId" value="@Model["ServiceTypeId"]">
                        </div>

                        <div class="mb-3">
                            <label for="status" class="form-label">Status</label>
                            <select class="form-control" id="status">
                                <option value="Pending" selected="@(Model["Status"].ToString() == "Pending")">Pending</option>
                                <option value="Confirmed" selected="@(Model["Status"].ToString() == "Confirmed")">Confirmed</option>
                                <option value="Completed" selected="@(Model["Status"].ToString() == "Completed")">Completed</option>
                                <option value="Cancelled" selected="@(Model["Status"].ToString() == "Cancelled")">Cancelled</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="dateTime" class="form-label">Date & Time</label>
                            <input type="datetime-local" class="form-control" id="dateTime"
                                   value="@Convert.ToDateTime(Model["DateTime"]).ToString("yyyy-MM-ddTHH:mm")">
                        </div>

                        <div class="mb-3">
                            <label for="slot" class="form-label">Slot</label>
                            <input type="number" class="form-control" id="slot" value="@Model["Slot"]">
                        </div>

                        <div class="mb-3">
                            <label for="location" class="form-label">Location</label>
                            <select class="form-control" id="location">
                                <option value="PHYSICAL" selected="@(Model["Location"].ToString() == "PHYSICAL")">Physical</option>
                                <option value="VIRTUAL" selected="@(Model["Location"].ToString() == "VIRTUAL")">Virtual</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="updateAppointment()">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this appointment?</p>
                    <p>This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="deleteAppointment()">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function showEditModal() {
            const modal = new bootstrap.Modal(document.getElementById('editModal'));
            modal.show();
        }

        function confirmDelete() {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        function updateAppointment() {
            const appointmentId = document.getElementById('appointmentId').value;
            const patientId = document.getElementById('patientId').value;
            const nurseId = document.getElementById('nurseId').value;
            const doctorId = document.getElementById('doctorId').value;
            const serviceTypeId = document.getElementById('serviceTypeId').value;
            const status = document.getElementById('status').value;
            const dateTime = new Date(document.getElementById('dateTime').value).toISOString();
            const slot = parseInt(document.getElementById('slot').value);
            const location = document.getElementById('location').value;

            // create request data
            const requestData = {
                AppointmentId: appointmentId,
                PatientId: patientId,
                NurseId: nurseId,
                DoctorId: doctorId,
                ServiceTypeId: serviceTypeId,
                Status: status,
                DateTime: dateTime,
                Slot: slot,
                Location: location
            };

            // send PUT request to update appt
            fetch("/api/ServiceAppointments/Update", {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(requestData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        bootstrap.Modal.getInstance(document.getElementById('editModal')).hide();

                        // update displayed values w/o page refresh
                        document.getElementById('nurseIdDisplay').textContent = nurseId;
                        document.getElementById('doctorIdDisplay').textContent = doctorId;
                        document.getElementById('serviceTypeIdDisplay').textContent = serviceTypeId;
                        document.getElementById('statusDisplay').textContent = status;
                        document.getElementById('dateTimeDisplay').textContent = new Date(dateTime).toLocaleString();
                        document.getElementById('slotDisplay').textContent = slot;
                        document.getElementById('locationDisplay').textContent = location;

                        alert(data.message)
                    } else {
                        alert(data.message)
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while updating the appointment.");
                });
        }
        
        function deleteAppointment() {
            const appointmentId = document.getElementById('appointmentId').value;

            // send DELETE request to delete appt
            fetch(`/api/ServiceAppointments/Delete/${appointmentId}`, {
                method: "DELETE"
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
                        alert(data.message);
                        window.location.href = "/api/ServiceAppointments";
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while deleting the appointment.");
                });
        }
    </script>
</div>
</body>
</html>