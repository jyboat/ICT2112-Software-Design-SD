@using ClearCare.Models.Entities

@{
    ViewData["Title"] = "Manage" + (ViewData["CurrentView"]!.ToString() == "medical" ? " Medical Staff" : " Patients & Caregivers");
    var userList = ViewData["Users"] as List<User>;
    var timestamp = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"); // System timestamp
}

@* for password reset alert *@
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<div class="container mt-5">
    <h1 class="mb-4 text-center">@ViewData["Title"]</h1>

    <!-- Toggle Views -->
    <div class="mb-3 text-center">
        <a asp-action="Dashboard" asp-route-currentView="medical" class="btn @(ViewData["CurrentView"]!.ToString() == "medical" ? "btn-primary" : "btn-outline-primary")">
            Medical Staff (Doctors & Nurses)
        </a>
        <a asp-action="Dashboard" asp-route-currentView="patient" class="btn @(ViewData["CurrentView"]!.ToString() == "patient" ? "btn-primary" : "btn-outline-primary")">
            Patients & Caregivers
        </a>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h5 class="fw-bold mb-1">User Accounts Overview</h5>
            <small class="text-muted">Total Users: @(userList?.Count ?? 0)</small>
        </div>
    </div>

    <!-- Search and Create Button Section -->
    <div class="d-flex flex-column flex-md-row gap-2 gap-md-0 justify-content-between mb-3">
        <div class="d-flex gap-2 flex-grow-1 me-md-3">
            <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                    <i class="bi bi-search text-muted"></i>
                </span>
                <input type="text" id="searchInput" class="form-control border-start-0 ps-0"
                    placeholder="Search by name, role, or ID..." aria-label="Search users">
            </div>
            <button type="button" class="btn btn-outline-secondary d-none" id="clearSearch">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <a class="btn btn-success" asp-controller="Admin" asp-action="LoadCreateNurseAccount">
            <i class="bi bi-plus-circle me-1"></i> Create New User
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered" id="recordsTable">
            <thead class="table-primary">
                <tr>
                    <th scope="col" class="text-nowrap">User ID</th>
                    <th scope="col">Name</th>
                    @if(ViewData["CurrentView"]!.ToString() == "medical")
                    {
                        <th scope="col">Department/Specialization</th>
                    }
                    <th scope="col">Role</th>
                    <th scope="col" class="text-center">Details</th>
                </tr>
            </thead>
            <tbody>
                @if (userList != null && userList.Any())
                {
                    @foreach (var user in userList)
                    {
                        <tr>
                            <td class="text-nowrap">@(user?.getProfileData()["UserID"] ?? "N/A")</td>
                            <td>@(user?.getProfileData()["Name"] ?? "N/A")</td>

                            @if(ViewData["CurrentView"]!.ToString() == "medical")
                            {
                                var displayValue = "";
                                <td class="text-nowrap">
                                    @if (user.getProfileData().TryGetValue("Department", out var dept))
                                    {
                                        displayValue = dept as string;
                                    }
                                    else if (user.getProfileData().TryGetValue("Specialization", out var spec))
                                    {
                                        displayValue = spec as string;
                                    }   
                                    else
                                    {
                                        displayValue = "N/A";
                                    }
                                    @displayValue
                                </td>
                            }
                            
                            <td class="text-nowrap">
                                <span class="badge bg-primary">@(user?.getProfileData()["Role"] ?? "N/A")</span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group">
                                    @if (!string.IsNullOrEmpty(user?.getProfileData()["UserID"] as String))
                                    {                                        
                                        <button data-bs-toggle="modal" data-bs-target="#viewUserModal_@user?.getProfileData()["UserID"]" class="btn btn-warning btn-md me-2" title="View Details">
                                            <i class="bi bi-eye"></i><span class="d-none d-md-inline"> View</span>
                                        </button>
                                        <a href="/UpdateProfilePage/@user?.getProfileData()["UserID"]" class="btn btn-warning btn-md me-2" title="Edit Account">
                                            <i class="bi bi-pencil-square"></i><span class="d-none d-md-inline"> Edit</span>
                                        </a>
                                        <button data-bs-toggle="modal" data-bs-target="#resetPassword_@user?.getProfileData()["UserID"]" class="btn btn-warning btn-md me-2" title="View Details">
                                            <i class="bi bi-arrow-repeat"></i><span class="d-none d-md-inline"> Reset Password</span>
                                        </button>

                                        @if (user?.getProfileData()["Role"]?.ToString() == "Doctor" || user?.getProfileData()["Role"]?.ToString() == "Nurse")
                                        {
                                            <button data-bs-toggle="modal" data-bs-target="#deleteAccount_@user?.getProfileData()["UserID"]" class="btn btn-warning btn-md me-2" title="View Details">
                                                <i class="bi bi-trash-fill"></i><span class="d-none d-md-inline"> Delete Account</span>
                                            </button>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">No actions available</span>
                                    }
                                </div>
                            </td>
                        </tr>

                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center py-4">
                            <div class="text-muted">
                                <i class="bi bi-inbox fs-2 d-block mb-2"></i>
                                No users found in the system
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (userList != null && userList.Any())
    {
        @foreach (var user in userList)
        {
            // Delete Password Modal
            <div class="modal fade" id="deleteAccount_@user?.getProfileData()["UserID"]" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Account for @user?.getProfileData()["Name"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete account for @user?.getProfileData()["Name"] ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <form action="/Admin/deleteAccount" method="post" style="display:inline;">
                        <input type="hidden" name="uid" value="@(user?.getProfileData()["UserID"])" />
                        <button type="submit" class="btn btn-sm btn-danger px-3 py-1" title="Delete Account">
                            <i class="fa-solid fa-trash"></i><span class="d-none d-md-inline"> Delete Account</span>
                        </button>
                    </form>
                </div>
                </div>
            </div>
            </div>

            // View User Profile Modal
            <div class="modal fade" id="viewUserModal_@user?.getProfileData()["UserID"]" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content border-0 shadow">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title" id="userModalLabel">
                            <i class="bi bi-person-circle me-2"></i>User Profile
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-4">
                        <div class="d-flex align-items-center mb-4">
                            <div class="bg-light rounded-circle p-3 me-3">
                                <i class="bi bi-person-fill fs-1 text-primary"></i>
                            </div>
                            <div>
                                <h4 class="mb-0">@user?.getProfileData()["Name"]</h4>
                                <span class="badge bg-secondary">@user?.getProfileData()["Role"]</span>
                            </div>
                        </div>
                        
                        <div class="list-group list-group-flush">
                            <div class="list-group-item d-flex px-0">
                                <div class="me-3">
                                    <i class="bi bi-fingerprint text-muted"></i>
                                </div>
                                <div>
                                    <small class="text-muted">User ID</small>
                                    <p class="mb-0">@user?.getProfileData()["UserID"]</p>
                                </div>
                            </div>

                            <div class="list-group-item d-flex px-0">
                                <div class="me-3">
                                    <i class="bi bi-envelope text-muted"></i>
                                </div>
                                <div>
                                    <small class="text-muted">Email</small>
                                    <p class="mb-0">@user?.getProfileData()["Email"]</p>
                                </div>
                            </div>
                            
                            <div class="list-group-item d-flex px-0">
                                <div class="me-3">
                                    <i class="bi bi-telephone text-muted"></i>
                                </div>
                                <div>
                                    <small class="text-muted">Phone</small>
                                    <p class="mb-0">@user?.getProfileData()["MobileNumber"]</p>
                                </div>
                            </div>
                            
                            <div class="list-group-item d-flex px-0">
                                <div class="me-3">
                                    <i class="bi bi-geo-alt text-muted"></i>
                                </div>
                                <div>
                                    <small class="text-muted">Address</small>
                                    <p class="mb-0">@user?.getProfileData()["Address"]</p>
                                </div>
                            </div>

                            @if (user?.getProfileData()["Role"]?.ToString() == "Patient" && user?.getProfileData()["DateOfBirth"] is Google.Cloud.Firestore.Timestamp dobTs)
                            {
                                <div class="list-group-item d-flex px-0">
                                    <div class="me-3">
                                        <i class="bi bi-calendar-event text-muted"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Date of Birth</small>
                                        <p class="mb-0">@dobTs.ToDateTime().AddHours(8).ToString("dd MMM yyyy")</p>
                                    </div>
                                </div>
                            }

                            
                            @if (user?.getProfileData()["Role"].ToString() == "Patient" && user?.getProfileData()["AssignedCaregiverID"] != null)
                            {
                                <div class="list-group-item d-flex px-0">
                                    <div class="me-3">
                                        <i class="bi bi-heart-pulse text-muted"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Caregiver</small>
                                        <p class="mb-0">
                                            <a href="#" data-bs-toggle="modal" data-bs-target="#viewUserModal_@user?.getProfileData()["AssignedCaregiverID"]">
                                                @user?.getProfileData()["AssignedCaregiverName"]
                                            </a>
                                        </p>
                                    </div>
                                </div>
                            }
                            
                            @if (user?.getProfileData()["Role"].ToString() == "Caregiver" && user?.getProfileData()["AssignedPatientID"] != null)
                            {
                                <div class="list-group-item d-flex px-0">
                                    <div class="me-3">
                                        <i class="bi bi-people text-muted"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Patient(s)</small>
                                        <p class="mb-1">
                                            <a href="#" data-bs-toggle="modal" data-bs-target="#viewUserModal_@user?.getProfileData()["AssignedPatientID"]">
                                                @user?.getProfileData()["AssignedPatientName"]
                                            </a>
                                        </p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                        <a href="/UpdateProfilePage/@user?.getProfileData()["UserID"]" class="btn btn-primary">
                            <i class="bi bi-pencil-square me-1"></i>Edit Profile
                        </a>
                    </div>
                </div>
            </div>
        </div>

            // Reset Password Modal
            <div class="modal fade" id="resetPassword_@user?.getProfileData()["UserID"]" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Reset Password for @user?.getProfileData()["Name"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to reset password for @user?.getProfileData()["Name"] ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <form action="/Admin/resetPassword" method="post" style="display:inline;">
                        <input type="hidden" name="uid" value="@(user?.getProfileData()["UserID"])" />
                        <button type="submit" class="btn btn-sm btn-success px-3 py-1" title="Reset Password">
                            <i class="bi bi-arrow-repeat"></i><span class="d-none d-md-inline"> Reset Password</span>
                        </button>
                    </form>
                </div>
                </div>
            </div>
            </div>
        }
    }

    <!-- Pagination Controls -->
    <div class="d-flex justify-content-center mt-3">
        <nav>
            <ul class="pagination" id="pagination"></ul>
        </nav>
    </div>

</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const clearSearchBtn = document.getElementById('clearSearch');
            const table = document.getElementById('recordsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            function filterTable(searchTerm) {
                searchTerm = searchTerm.toLowerCase();
                let hasVisibleRows = false;

                Array.from(rows).forEach(row => {
                    const cells = row.getElementsByTagName('td');
                    let rowText = '';
                    Array.from(cells).forEach(cell => {
                        rowText += cell.textContent + ' ';
                    });
                    rowText = rowText.toLowerCase();

                    if (rowText.includes(searchTerm)) {
                        row.style.display = '';
                        hasVisibleRows = true;
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Show/hide clear button based on search input
                clearSearchBtn.classList.toggle('d-none', !searchTerm);

                // Show no results message if needed
                const noResultsRow = table.querySelector('tr.no-results');
                if (!hasVisibleRows) {
                    if (!noResultsRow) {
                        const tbody = table.getElementsByTagName('tbody')[0];
                        const newRow = document.createElement('tr');
                        newRow.className = 'no-results';
                        newRow.innerHTML = `
                                        <td colspan="5" class="text-center py-4">
                                            <div class="text-muted">
                                                <i class="bi bi-search fs-2 d-block mb-2"></i>
                                                No users found matching "${searchTerm}"
                                            </div>
                                        </td>
                                    `;
                        tbody.appendChild(newRow);
                    }
                } else if (noResultsRow) {
                    noResultsRow.remove();
                }
            }

            // Search input event handler
            searchInput.addEventListener('input', function () {
                filterTable(this.value.trim());
            });

            // Clear search button click handler
            clearSearchBtn.addEventListener('click', function () {
                searchInput.value = '';
                filterTable('');
                this.classList.add('d-none');
                searchInput.focus();
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(function () {
                let alerts = document.querySelectorAll('.alert');
                alerts.forEach(alert => {
                    let bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 3000); // Auto-dismiss after 3 seconds
        });
    </script>

}
