@model ClearCare.Models.PrescriptionModel
@using ClearCare  
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Create Prescription";
    
    // Retrieve the current user's UUID from session.
    string currentUserUUID = Context.Session.GetString("UserUUID") ?? "";
    // Set the DoctorId on the model using the session value.
    Model.DoctorId = currentUserUUID;
    
    // The patient list remains sourced from your hardcoded list.
    var patientList = HardcodedUUIDs.Patients;
}

<h2>Create Prescription</h2>

<form asp-action="Create" method="post">
    <div>
        <label>Patient:</label>
        <select asp-for="PatientId" class="form-control">
            @foreach (var patient in patientList)
            {
                <option value="@patient.Uuid">@patient.Name</option>
            }
        </select>
    </div>

    <div>
        <!-- Hidden field for DoctorId is now populated from session -->
        <input type="hidden" asp-for="DoctorId" value="@currentUserUUID" />
    </div>
    
    <h4>Medications</h4>
    <div id="medications-container">
        @for (int i = 0; i < Model.Medications.Count; i++)
        {
            <div class="medication-row">
                <label>Drug Name:</label>
                <input asp-for="Medications[@i].DrugName" />

                <label>Dosage:</label>
                <input asp-for="Medications[@i].Dosage" />

                <button type="button" onclick="removeRow(this)">Remove</button>
            </div>
        }
    </div>

    <div id="medication-template" style="display:none;">
        <div class="medication-row">
            <label>Drug Name:</label>
            <input name="Medications[IDX].DrugName" value="" />

            <label>Dosage:</label>
            <input name="Medications[IDX].Dosage" value="" />

            <button type="button" onclick="removeRow(this)">Remove</button>
        </div>
    </div>

    <button type="button" onclick="addMedicationRow()">Add Drug</button>
    <button type="submit">Save</button>
</form>

@section Scripts {
    <script>
        let counter = @Model.Medications.Count;
        function addMedicationRow() {
            const template = document.getElementById("medication-template").innerHTML;
            const newRowHtml = template.replace(/IDX/g, counter);
            counter++;
            document.getElementById("medications-container").insertAdjacentHTML('beforeend', newRowHtml);
        }
        function removeRow(btn) {
            btn.parentElement.remove();
        }
    </script>
}
