@{
    var analytics = ViewData["AppointmentAnalytics"] as Dictionary<string, object>;
    var appointmentsPerType = analytics?["AppointmentsPerType"] as Dictionary<string, int>;
    var appointmentsPerDoctor = analytics?["AppointmentsPerDoctor"] as Dictionary<string, int>;
    var appointmentsPerMonth = analytics?["AppointmentsPerMonth"] as Dictionary<string, int>;
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<h2 class="text-center my-4">Service Appointments Analytics</h2>

@if (analytics == null || analytics.Count == 0)
{
    <div class="alert alert-warning">No appointment data available.</div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="card bg-primary text-white shadow-lg p-4">
                    <h5 class="card-title">Total Appointments</h5>
                    <p class="card-text fs-4">@analytics?["TotalAppointments"]</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white shadow-lg p-4">
                    <h5 class="card-title">Completed Appointments</h5>
                    <p class="card-text fs-4">@analytics?["CompletedAppointments"]</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-dark shadow-lg p-4">
                    <h5 class="card-title">Pending Appointments</h5>
                    <p class="card-text fs-4">@analytics?["PendingAppointments"]</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-danger text-white shadow-lg p-4">
                    <h5 class="card-title">Cancelled Appointments</h5>
                    <p class="card-text fs-4">@analytics?["CancelledAppointments"]</p>
                </div>
            </div>
        </div>

        <!-- Pie Chart: Completed vs Pending vs Cancelled -->
        <h3 class="mt-4 text-center">Appointment Status Breakdown</h3>
        <div style="width: 400px; height: 400px; margin: auto;">
            <canvas id="appointmentStatusChart"></canvas>
        </div>

        <!-- Line Chart: Total Appointments Over Time -->
        <h3 class="mt-4 text-center">Appointments Over Time</h3>
        <div style="width: 800px; height: 400px; margin: auto;">
            <canvas id="appointmentsOverTimeChart"></canvas>
        </div>

        <!-- Bar Chart: Appointments Per Service Type -->
        <h3 class="mt-4 text-center">Appointments Per Service Type</h3>
        <div style="width: 600px; height: 400px; margin: auto;">
            <canvas id="appointmentsPerServiceChart"></canvas>
        </div>

        <!-- Bar Chart: Appointments Per Doctor -->
        <h3 class="mt-4 text-center">Appointments Per Doctor</h3>
        <div style="width: 600px; height: 400px; margin: auto;">
            <canvas id="appointmentsPerDoctorChart"></canvas>
        </div>

                <h3 class="mt-4">Appointments Per Service Type</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Service Type</th>
                    <th>Total Appointments</th>
                </tr>
            </thead>
            <tbody>
                @if (appointmentsPerType != null)
                {
                    @foreach (var type in appointmentsPerType)
                    {
                        <tr>
                            <td>@type.Key</td>
                            <td>@type.Value</td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <h3 class="mt-4">Appointments Per Month</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Month-Year</th>
                    <th>Total Appointments</th>
                </tr>
            </thead>
            <tbody>
                @if (appointmentsPerMonth != null)
                {
                    @foreach (var month in appointmentsPerMonth)
                    {
                        <tr>
                            <td>@month.Key</td>
                            <td>@month.Value</td>
                        </tr>
                    }
                }
            </tbody>
        </table>


    </div>
}

<script>
    // Pie Chart: Completed vs Pending vs Cancelled
    var ctx1 = document.getElementById('appointmentStatusChart').getContext('2d');
    new Chart(ctx1, {
        type: 'pie',
        data: {
            labels: ['Completed', 'Pending', 'Cancelled'],
            datasets: [{
                data: [@analytics?["CompletedAppointments"], @analytics?["PendingAppointments"], @analytics?["CancelledAppointments"]],
                backgroundColor: ['#28a745', '#ffc107', '#dc3545']
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    // Line Chart: Total Appointments Over Time
    var ctx2 = document.getElementById('appointmentsOverTimeChart').getContext('2d');
    var appointmentsPerMonth = @Html.Raw(Json.Serialize(appointmentsPerMonth ?? new Dictionary<string, int>()));
    new Chart(ctx2, {
        type: 'line',
        data: {
            labels: Object.keys(appointmentsPerMonth),
            datasets: [{
                label: 'Total Appointments',
                data: Object.values(appointmentsPerMonth),
                borderColor: '#007bff',
                fill: false
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    // Bar Chart: Appointments Per Service Type
    var ctx3 = document.getElementById('appointmentsPerServiceChart').getContext('2d');
    var appointmentsPerType = @Html.Raw(Json.Serialize(appointmentsPerType ?? new Dictionary<string, int>()));
    new Chart(ctx3, {
        type: 'bar',
        data: {
            labels: Object.keys(appointmentsPerType),
            datasets: [{
                label: 'Appointments',
                data: Object.values(appointmentsPerType),
                backgroundColor: '#17a2b8'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    // Bar Chart: Appointments Per Doctor
    var ctx4 = document.getElementById('appointmentsPerDoctorChart').getContext('2d');
    var appointmentsPerDoctor = @Html.Raw(Json.Serialize(appointmentsPerDoctor ?? new Dictionary<string, int>()));
    new Chart(ctx4, {
        type: 'bar',
        data: {
            labels: Object.keys(appointmentsPerDoctor),
            datasets: [{
                label: 'Appointments',
                data: Object.values(appointmentsPerDoctor),
                backgroundColor: '#ff9800'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: { beginAtZero: true }
            }
        }
    });
</script>
