@model List<ClearCare.Models.Entities.ServiceType_SDM>

@{
    ViewData["Title"] = "Service Types";
}

<h2>Service Types</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<!-- Button to trigger add service modal & search bar -->
<div class="d-flex justify-content-between align-items-center mb-3 position-relative">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addServiceModal">
        Add a Service
    </button>

    <div style="position: relative; max-width: 400px; width: 100%;">
        <input type="text" id="liveSearch" class="form-control" placeholder="Search services..." autocomplete="off" />
        <ul id="searchResults" class="list-group position-absolute w-100 z-3"
            style="top: 100%; max-height: 200px; overflow-y: auto;"></ul>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover table-bordered">
        <thead class="table-primary">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Duration</th>
                <th>Modality</th>
                <th>Requirements</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var service in Model)
            {
                <tr id="service-@service.ServiceTypeId">
                    <td>@service.ServiceTypeId</td>
                    <td>@service.Name</td>
                    <td>@service.Duration</td>
                    <td>@service.Modality</td>
                    <td>@service.Requirements</td>
                    <td>
                        @if (service.Status == "discontinued")
                        {
                            <span class="badge bg-secondary">Discontinued</span>
                        }
                        else
                        {
                            <button class="btn btn-warning" data-bs-toggle="modal"
                                data-bs-target="#editServiceModal-@service.ServiceTypeId">
                                Edit
                            </button>
                            <button class="btn btn-danger" onclick="loadDiscontinueModal(@service.ServiceTypeId)">
                                Discontinue
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

<!-- Modal container -- Discontinue service -->
<div class="modal fade" id="discontinueModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" id="discontinueModalContent"></div>
    </div>
</div>


<script>
    function loadDiscontinueModal(serviceId) {
        fetch(`/ServiceTypeInput/ConfirmDiscontinue/${serviceId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById("discontinueModalContent").innerHTML = html;
                new bootstrap.Modal(document.getElementById("discontinueModal")).show();
            });
    }
</script>


<!-- Add Service Modal -->
<div class="modal fade" id="addServiceModal" tabindex="-1" aria-labelledby="addServiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addServiceModalLabel">Add New Service</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Create" asp-controller="ServiceTypeInput" method="post">
                    <div class="mb-3">
                        <label for="serviceName" class="form-label">Service Name</label>
                        <input type="text" class="form-control" id="serviceName" name="name" required>
                        <div class="invalid-feedback">Service name is required.</div>
                    </div>
                    <div class="mb-3">
                        <label for="serviceDuration" class="form-label">Duration (minutes)</label>
                        <input type="number" class="form-control" id="serviceDuration" name="duration" min="60" required>
                        <div class="invalid-feedback">Service duration must be at least 60 minute.</div>
                    </div>
                    <div class="mb-3">
                        <label for="modality" class="form-label">Modality</label>
                        <select class="form-control" id="modality" name="modality" required>
                            <option value="">-- Select Modality --</option>
                            <option value="Virtual">Virtual</option>
                            <option value="Physical (Level 1 Room A)">Physical (Level 1 Room A)</option>
                            <option value="Physical (Level 2 Room B)">Physical (Level 2 Room B)</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="serviceRequirements" class="form-label">Requirements</label>
                        <textarea class="form-control" id="serviceRequirements" name="requirements" required></textarea>
                        <div class="invalid-feedback">Service requirements are required.</div>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Service</button>
                </form>
            </div>
        </div>
    </div>
</div>


@foreach (var service in Model)
{
    <div class="modal fade" id="editServiceModal-@service.ServiceTypeId" tabindex="-1"
        aria-labelledby="editServiceModalLabel-@service.ServiceTypeId" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editServiceModalLabel-@service.ServiceTypeId">Edit Service</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="ServiceTypeInput" method="post">
                        <input type="hidden" name="id" value="@service.ServiceTypeId" />
                        <div class="mb-3">
                            <label for="editServiceName-@service.ServiceTypeId" class="form-label">Service Name</label>
                            <input type="text" class="form-control" id="editServiceName-@service.ServiceTypeId" name="name"
                                value="@service.Name" required>
                        </div>
                        <div class="mb-3">
                            <label for="editServiceDuration-@service.ServiceTypeId" class="form-label">Duration
                                (minutes)</label>
                            <input type="number" class="form-control" id="editServiceDuration-@service.ServiceTypeId"
                                name="duration" value="@service.Duration" required>
                        </div>
                        <select class="form-control" name="modality" required>
                            @if (service.Modality == "Virtual")
                            {
                                <option value="Virtual" selected>Virtual</option>
                            }
                            else
                            {
                                <option value="Virtual">Virtual</option>
                            }
                            @if (service.Modality == "Physical (Level 1 Room A)")
                            {
                                <option value="Physical (Level 1 Room A)" selected>Physical (Level 1 Room A)</option>
                            }
                            else
                            {
                                <option value="Physical (Level 1 Room A)">Physical (Level 1 Room A)</option>
                            }
                            @if (service.Modality == "Physical (Level 2 Room B)")
                            {
                                <option value="Physical (Level 2 Room B)" selected>Physical (Level 2 Room B)</option>
                            }
                            else
                            {
                                <option value="Physical (Level 2 Room B)">Physical (Level 2 Room B)</option>
                            }

                        </select>
                        <div class="mb-3">
                            <label for="editServiceRequirements-@service.ServiceTypeId"
                                class="form-label">Requirements</label>
                            <textarea class="form-control" id="editServiceRequirements-@service.ServiceTypeId"
                                name="requirements" required>@service.Requirements</textarea>
                        </div>
                        <button type="submit" class="btn btn-success">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}



<!-- Delete Confirmation Script -->
<script>
    function confirmDelete(serviceId, serviceName) {
        if (confirm("Are you sure you want to delete " + serviceName + "?")) {
            window.location.href = "/ServiceTypeInput/Delete/" + serviceId;
        }
    }
</script>

@section Scripts {
    <script>
        const input = document.getElementById("liveSearch");
        const resultsList = document.getElementById("searchResults");

        input.addEventListener("input", async function () {
            const term = this.value.trim();
            resultsList.innerHTML = "";

            if (term.length < 2) return;

            const response = await fetch(`/ServiceTypeInput/SearchServices?term=${encodeURIComponent(term)}`);
            const data = await response.json();

            if (data.length === 0) {
                resultsList.innerHTML = `<li class="list-group-item text-muted">No matches found</li>`;
                return;
            }

            data.forEach(service => {
                const li = document.createElement("li");
                li.classList.add("list-group-item", "list-group-item-action");
                li.textContent = `${service.name} (${service.modality})`;
                li.style.cursor = "pointer";

                li.addEventListener("click", () => {
                    const targetRow = document.getElementById(`service-${service.id}`);
                    if (targetRow) {
                        targetRow.scrollIntoView({ behavior: "smooth", block: "center" });
                        targetRow.classList.add("table-warning");
                        setTimeout(() => targetRow.classList.remove("table-warning"), 2000);
                    }
                });

                resultsList.appendChild(li);
            });
        });

        document.addEventListener("click", (e) => {
            if (!e.target.closest("#liveSearch")) {
                resultsList.innerHTML = "";
            }
        });
    </script>
}
