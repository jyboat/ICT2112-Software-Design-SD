@model List<ClearCare.Models.DTO.appointmentDTO>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

@{
    ViewData["Title"] = "Service Completion";
}

<h2>Service Completion</h2>

@if (!string.IsNullOrEmpty(TempData["NotificationMessage"] as string))
{
    <div class="alert alert-info">
        @TempData["NotificationMessage"]
    </div>
}

@if (Model != null && Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered" id="apptTable">
            <thead class="table-primary">
                <tr>
                    <th>Appointment ID</th>
                    <th>Patient</th>
                    <th>Nurse</th>
                    <th>Doctor</th>
                    <th>Service Type</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model)
                {
                    <tr>
                        <td>@appointment.getAppointmentId</td>
                        <td>@appointment.getPatientName</td>
                        <td>@appointment.getNurseName</td>
                        <td>@appointment.getDoctorName</td>
                        <td>@appointment.getService</td>
                        <td>@appointment.getStatus</td>
                        <td>
                            <!-- Update Button -->
                            <button class="btn btn-primary update-btn"
                                    data-appointment-id="@appointment.getAppointmentId"
                                    data-patient-id="@appointment.getPatientId"
                                    data-nurse-id="@appointment.getNurseId"
                                    data-doctor-id="@appointment.getDoctorId"
                                    data-patient-name="@appointment.getPatientName"
                                    data-nurse-name="@appointment.getNurseName"
                                    data-doctor-name="@appointment.getDoctorName"
                                    data-service="@appointment.getService"
                                    data-status="@appointment.getStatus">
                                Mark as Complete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
}
else
{
    <div class="alert alert-warning mt-3">No pending service appointments found.</div>
}

<!-- Modal -->
<div class="modal fade" id="appointmentModal" tabindex="-1" role="dialog" aria-labelledby="appointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="appointmentModalLabel">Mark Service as Complete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="appointmentForm">
                    <div class="form-group">
                        <label for="appointmentId">Appointment ID</label>
                        <input type="text" class="form-control" id="appointmentId" disabled>
                    </div>
                    <div class="form-group">
                        <label for="patientName">Patient</label>
                        <input type="text" class="form-control" id="patientName" disabled>
                        <input type="hidden" id="patientId">
                    </div>
                    <div class="form-group">
                        <label for="nurseName">Nurse</label>
                        <input type="text" class="form-control" id="nurseName" disabled>
                        <input type="hidden" id="nurseId">
                    </div>
                    <div class="form-group">
                        <label for="doctorName">Doctor</label>
                        <input type="text" class="form-control" id="doctorName" disabled>
                        <input type="hidden" id="doctorId">
                    </div>
                    <div class="form-group">
                        <label for="service">Service Type</label>
                        <input type="text" class="form-control" id="service" disabled>
                    </div>
                    <div class="form-group">
                        <label for="status">Status</label>
                        <input type="text" class="form-control" id="status" disabled>
                    </div>
                    <!-- New fields for creating service history -->
                    <div class="form-group">
                        <label for="serviceDate">Service Date</label>
                        <input type="datetime-local" class="form-control" id="serviceDate">
                    </div>
                    <div class="form-group">
                        <label for="location">Location</label>
                        <select class="form-control" id="location">
                            <option value="Virtual">Virtual</option>
                            <option value="Physical (Level 1 Room A)">Physical (Level 1 Room A)</option>
                            <option value="Physical (Level 2 Room B)">Physical (Level 2 Room B)</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="serviceOutcomes">Service Outcomes</label>
                        <textarea class="form-control" id="serviceOutcomes"></textarea>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="updateStatusBtn">Mark as Complete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
$(document).ready(function () {
        // Set the minimum value for the serviceDate input to the current date and time
    function setMinServiceDate() {
        var now = new Date();
        // Format date to yyyy-MM-ddThh:mm
        var year = now.getFullYear();
        var month = ('0' + (now.getMonth() + 1)).slice(-2);
        var day = ('0' + now.getDate()).slice(-2);
        var hours = ('0' + now.getHours()).slice(-2);
        var minutes = ('0' + now.getMinutes()).slice(-2);
        var formattedNow = year + '-' + month + '-' + day + 'T' + hours + ':' + minutes;
        $('#serviceDate').attr('min', formattedNow);
    }

    // Call the function on page load
    setMinServiceDate();

    $('.close, .btn-secondary').click(function () {
        $('#appointmentModal').modal('hide');
    });


    $('.update-btn').click(function () {
        var appointmentId = $(this).data('appointment-id');
        var patientId = $(this).data('patient-id');
        var nurseId = $(this).data('nurse-id');
        var doctorId = $(this).data('doctor-id');
        var patientName = $(this).data('patient-name');
        var nurseName = $(this).data('nurse-name');
        var doctorName = $(this).data('doctor-name');
        var service = $(this).data('service');
        var status = $(this).data('status');

        // Log the data when the update button is clicked
        console.log("Button clicked, retrieving data:");
        console.log({
            appointmentId: appointmentId,
            patientId: patientId,
            nurseId: nurseId,
            doctorId: doctorId,
            service: service,
            status: status
        });

        // Populate the modal with current appointment data
        $('#appointmentId').val(appointmentId);

        $('#patientName').val(patientName);
        $('#nurseName').val(nurseName);
        $('#doctorName').val(doctorName);

        $('#patientId').val(patientId); // Hidden field for updates
        $('#nurseId').val(nurseId);     // Hidden field for updates
        $('#doctorId').val(doctorId);   // Hidden field for updates

        $('#service').val(service);
        $('#status').val(status);

        console.log("Modal populated with values:");
        console.log({
            appointmentId: $('#appointmentId').val(),
            patientId: $('#patientId').val(),
            nurseId: $('#nurseId').val(),
            doctorId: $('#doctorId').val(),
            service: $('#service').val(),
            status: $('#status').val()
        });

        // Show the modal
       // $('#appointmentModal').modal('show');
        var modal = new bootstrap.Modal(document.getElementById('appointmentModal'));
        modal.show();
    });

    // Handle the Update Status button click inside the modal
    $('#updateStatusBtn').click(function () {
        var appointmentId = $('#appointmentId').val();
        var serviceDate = $('#serviceDate').val();
        var location = $('#location').val();
        var serviceOutcomes = $('#serviceOutcomes').val();
        var patientId = $('#patientId').val();
        var nurseId = $('#nurseId').val();
        var doctorId = $('#doctorId').val();
        var service = $('#service').val();
        var status = $('#status').val();

               var service = $('#service').val();
        var status = $('#status').val();

        // Check if any required fields are empty
        if (!serviceDate || !location || !serviceOutcomes || !appointmentId || !patientId || !nurseId || !doctorId || !service || !status) {
            // Display error message if any field is blank
            alert("Please fill in all the required fields.");
            return; // Prevent form submission
        }

        // Log the data before making the POST and PUT requests
        console.log("Preparing to send POST and PUT requests...");
        console.log({
            appointmentId: appointmentId,
            patientId: patientId,
            nurseId: nurseId,
            doctorId: doctorId,
            service: service,
            status: status,
            serviceDate: serviceDate,
            location: location,
            serviceOutcomes: serviceOutcomes
        });

        // Define the common data object to send with both requests
        var data = {
            appointmentId: appointmentId,
            patientId: patientId,
            nurseId: nurseId,
            doctorId: doctorId,
            service: service,
            status: status,
            serviceDate: serviceDate,
            location: location,
            serviceOutcomes: serviceOutcomes
        };

        // Send the POST request to create a new service history
        $.ajax({
            url: '/ServiceCompletionInput/createServiceCompletionHistory', // POST endpoint
            type: 'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (response) {
                alert('Service history created successfully!');
            },
            error: function (xhr, status, error) {
                alert('Error creating service history: ' + error);
            }
        });

        // Send the PUT request to update the appointment
        $.ajax({
            url: '/ServiceCompletionInput/appointments/' + appointmentId + '?patientId=' + patientId + '&nurseId=' + nurseId,// PUT endpoint
            type: 'PUT',
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (response) {
                // Handle the PUT response (appointment update)
                alert('Appointment updated successfully!');
                $('#appointmentModal').modal('hide'); // Hide the modal 
                window.location.reload();
            },
            error: function (xhr, status, error) {
                alert('Error updating appointment: ' + error);
            }
        });
    });
});
</script>

}