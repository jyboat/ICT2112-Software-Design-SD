@{
    ViewData["Title"] = "Notifications";
}

@{
    var userRole = Context.Session.GetString("Role");
    var userId = Context.Session.GetString("UserID");
}

<h2>@ViewData["Title"]</h2>

<div class="container mt-4">
    <!-- Notification Preference Card -->
    <div class="card mb-3">
        <div class="card-body d-flex justify-content-between align-items-center">
            <h4 class="card-title">Enable Notifications</h4>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="notificationToggle">
            </div>
        </div>
    </div>

    <!-- Preferred Notification Methods -->
    <div class="card mb-3">
        <div class="card-body">
            <h5 class="card-title">Preferred Notification Methods</h5>
            <div class="d-flex justify-content-between align-items-center">
                <label for="smsNotification">SMS</label>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="smsNotification">
                </div>
            </div>
            <div class="d-flex justify-content-between align-items-center mt-2">
                <label for="emailNotification">Email</label>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="emailNotification">
                </div>
            </div>
        </div>
    </div>

    <!-- DND Days Selection -->
    <div class="card mb-3">
        <div class="card-body">
            <h4 class="card-title">Select Days for Do Not Disturb</h4>
            <div class="d-flex flex-wrap">
                @foreach (var day in new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }) {
                    <div class="form-check me-3">
                        <input type="checkbox" class="form-check-input" id="@day.ToLower()">
                        <label class="form-check-label" for="@day.ToLower()">@day</label>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- DND Time Range -->
    <div class="card mb-3">
        <div class="card-body">
            <h4 class="card-title">Select Time Range for Do Not Disturb</h4>
            <div class="form-group">
                <label for="dndStartTime">Start Time:</label>
                <input type="time" class="form-control" id="dndStartTime" value="00:00">
            </div>
            <div class="form-group mt-2">
                <label for="dndEndTime">End Time:</label>
                <input type="time" class="form-control" id="dndEndTime" value="23:59">
            </div>
        </div>
    </div>

    <!-- Save Button -->
    <button onclick="saveNotificationPreference()" class="btn btn-primary mt-3">Save Preferences</button>
</div>

<script>
document.addEventListener("DOMContentLoaded", async function () {
    await loadNotificationPreference();
});

var userIdFromSession = '@userId'; // UserID from the session

async function loadNotificationPreference() {
    console.log("Fetching saved preferences...");

    try {
        const response = await fetch(`/NotificationPreference/get-all?userId=${userIdFromSession}`);

        if (!response.ok) {
            throw new Error("Failed to fetch preferences.");
        }

        const preferences = await response.json();
        console.log("Fetched Preferences:", preferences);

        if (!preferences || preferences.length === 0) {
            return;
        }

        const userPreference = preferences.find(pref => pref.userID === userIdFromSession);

        if (!userPreference) {
            return;
        }

        // Set toggle switch for notifications
        document.getElementById("notificationToggle").checked = userPreference.preference === "enabled";

        // Set toggle switches for methods
        document.getElementById("smsNotification").checked = userPreference.methods.includes("sms");
        document.getElementById("emailNotification").checked = userPreference.methods.includes("email");

        // Set checkboxes for DND days
        if (userPreference.dndDays) {
            const dndDaysArray = userPreference.dndDays.split(",");
            dndDaysArray.forEach(day => {
                const checkbox = document.getElementById(day.toLowerCase());
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
        }

        // Set DND time range
        if (userPreference.dndTimeRange) {
            const [startTime, endTime] = userPreference.dndTimeRange.split('-');
            document.getElementById("dndStartTime").value = startTime.slice(0, 5);
            document.getElementById("dndEndTime").value = endTime.slice(0, 5);
        }

    } catch (error) {
        console.error("Error loading preferences:", error);
    }
}

async function saveNotificationPreference() {
    console.log('Preference save triggered');

    var userId = '@ViewData["UserID"]';
    console.log("UserID from session: " + userId);

    const isNotificationsEnabled = document.getElementById("notificationToggle").checked;
    const selectedMethods = [];
    const selectedDndDays = [];

    const startTime = document.getElementById("dndStartTime").value;
    const endTime = document.getElementById("dndEndTime").value;

    // Collect selected DND days
    if (document.getElementById('monday').checked) selectedDndDays.push('Monday');
    if (document.getElementById('tuesday').checked) selectedDndDays.push('Tuesday');
    if (document.getElementById('wednesday').checked) selectedDndDays.push('Wednesday');
    if (document.getElementById('thursday').checked) selectedDndDays.push('Thursday');
    if (document.getElementById('friday').checked) selectedDndDays.push('Friday');
    if (document.getElementById('saturday').checked) selectedDndDays.push('Saturday');
    if (document.getElementById('sunday').checked) selectedDndDays.push('Sunday');

    const dndDaysString = selectedDndDays.join(',');

    // Collect selected notification methods
    if (document.getElementById('smsNotification').checked) selectedMethods.push('sms');
    if (document.getElementById('emailNotification').checked) selectedMethods.push('email');

    const methodsString = selectedMethods.join(',');

    try {
        const preferenceData = {
            preference: isNotificationsEnabled ? "enabled" : "disabled",
            methods: methodsString,
            dndDays: dndDaysString,
            dndTimeRange: `${startTime}-${endTime}`
        };

        console.log('Data being sent to API:', preferenceData);

        const response = await fetch('/NotificationPreference/save', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(preferenceData)
        });

        const result = await response.json();

        if (response.ok) {
            alert('Preference saved successfully!');
            await loadNotificationPreference();
        } else {
            alert('Error: ' + result.message);
        }
    } catch (error) {
        alert('Failed to save preference: ' + error.message);
    }
}
</script>
